@using TermasApp.IRepository
@model IEnumerable<TermasApp.Models.ConsultaModel>
@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> _signInManager
@inject IFuncionarioRepository _funcionarioRepository
@inject ITipoConsultaRepository _tipoConsulta
@inject IAquistaRepository _aquista
@inject ITriagemRepository _triagem

@{
    int idUserOrig = -1;
    string tipoFuncionario = "";
    string posto = "";
    string consulta;
    string paciente;
    string medico;
    string enfermeiro;
    if (_signInManager.IsSignedIn(User))
    {
        idUserOrig = Int32.Parse(User.FindFirst("IdUserOrig").Value);
        tipoFuncionario = await _funcionarioRepository.GetTipolFuncionario(idUserOrig);
        posto = await _funcionarioRepository.GetPostolFuncionario(idUserOrig);
    }
}


@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <div class="row">
        <div class="col-md-7">
            <h4 class="display-4 text-primary">Todas as Consultas</h4>
        </div>
        @if (tipoFuncionario == "Administrativo")
        {
            <div class="col-md-2">
                <br />
                <a asp-action="Index" class="btn btn-warning">Consultas Dia</a>
            </div>
            <div class="col-md-3">
                <br />
                <a asp-action="Create" asp-controller="TipoConsultas" class="btn btn-primary">Nova Especialidade</a>
            </div>
        }

    </div>
    <br />
    @if (Model.Count() > 0)
    {
        <table class="table table-bordered table-striped" id="dataTable" style="width:100%">
            <thead>
                <tr>
                    <th>Consulta</th>
                    <th>Aquista</th>
                    <th>Médico</th>
                    <th>Enfermeiro</th>
                    <th>Hora</th>
                    <th>Data</th>
                    <th>Opções</th>
                </tr>
            </thead>
            <tbody id="tbody">
                @foreach (var item in Model)
                {
                    consulta = await _tipoConsulta.GetNomeTConsulta(item.IdTipoConsulta);
                    paciente = await _aquista.GetNomeAquista(item.IdAquista);
                    medico = await _funcionarioRepository.GetNomeFuncionario(item.IdMedico);
                    enfermeiro = await _triagem.GetNomeEnfermeiro(item.IdTriagem);
                    <tr>
                        @if (tipoFuncionario == "Administrativo" || idUserOrig == item.IdMedico || posto == "Chefe")
                        {
                            <td><a asp-action="Details" asp-route-id="@item.IdTipoConsulta" title="Detalhes">@consulta</a></td>
                        }
                        else
                        {
                            <td>@consulta</td>
                        }
                        <td>@paciente</td>
                        <td>@medico</td>
                        <td>@enfermeiro</td>
                        <td>@item.Hora</td>
                        <td>@item.Data</td>
                        <td>
                            <div class="w-100 btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning mx-1"><i class="fas fa-pencil-alt" title="Editar"></i></a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger mx-1"><i class="fas fa-trash-alt" title="Eliminar"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>Nâo exitem dados</p>
    }
</div>
